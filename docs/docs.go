// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "mrexmelle@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts/{ehid}/career": {
            "get": {
                "description": "Get a career",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "EHID",
                        "name": "ehid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_account.GetCareerResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/accounts/{ehid}/profile": {
            "get": {
                "description": "Get a profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "EHID",
                        "name": "ehid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_account.GetProfileResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/gradings": {
            "post": {
                "description": "Post a new gradings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gradings"
                ],
                "parameters": [
                    {
                        "description": "Grading Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_grading.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_grading.PostResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/gradings/{id}": {
            "get": {
                "description": "Get a grading",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gradings"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Grading ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_grading.GetResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "delete": {
                "description": "Delete a grading",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gradings"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Grading ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_grading.DeleteResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "patch": {
                "description": "Patch a grading",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gradings"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Grading ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Grading Patch Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_grading.PatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_grading.PatchResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/titlings": {
            "post": {
                "description": "Post a new titlings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Titlings"
                ],
                "parameters": [
                    {
                        "description": "Titling Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_titling.PostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_titling.PostResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/titlings/{id}": {
            "get": {
                "description": "Get a titling",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Titlings"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Titling ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_titling.GetResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "delete": {
                "description": "Delete a titling",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Titlings"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Titling ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_titling.DeleteResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            },
            "patch": {
                "description": "Patch a titling",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Titlings"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Titling ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Titling Patch Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_titling.PatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success Response",
                        "schema": {
                            "$ref": "#/definitions/internal_titling.PatchResponseDto"
                        }
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_mrexmelle_connect-emp_internal_career.Aggregate": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "organization_node": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_mrexmelle_connect-emp_internal_dto.ServiceError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_mrexmelle_connect-emp_internal_profile.Aggregate": {
            "type": "object",
            "properties": {
                "dob": {
                    "type": "string"
                },
                "ehid": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "internal_account.GetCareerResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_career.Aggregate"
                    }
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_account.GetProfileResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_profile.Aggregate"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_grading.DeleteResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_grading.GetResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_grading.ViewEntity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_grading.PatchRequestDto": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "internal_grading.PatchResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_grading.PostRequestDto": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "internal_grading.PostResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_grading.ViewEntity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_grading.ViewEntity": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "grade": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "internal_titling.DeleteResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_titling.GetResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_titling.ViewEntity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_titling.PatchRequestDto": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "internal_titling.PatchResponseDto": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_titling.PostRequestDto": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "internal_titling.PostResponseDto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/internal_titling.ViewEntity"
                },
                "error": {
                    "$ref": "#/definitions/github_com_mrexmelle_connect-emp_internal_dto.ServiceError"
                }
            }
        },
        "internal_titling.ViewEntity": {
            "type": "object",
            "properties": {
                "ehid": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:8082",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Connect Employee API",
	Description:      "Employee API for Connect.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
